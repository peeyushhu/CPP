#include <stdio.h>

void merge(int a[], int n, int b[], int m, int c[]) {
    int i = 0, j = 0, k = 0;

    while (i < n && j < m) {
        if (a[i] <= b[j]) {
            c[k] = a[i];
            i++;
        } else {
            c[k] = b[j];
            j++;
        }
        k++;
    }

    while (i < n) {
        c[k] = a[i];
        i++;
        k++;
    }

    while (j < m) {
        c[k] = b[j];
        j++;
        k++;
    }
}

void mergeSort(int a[], int low, int high) {
    if (low < high) {
        int mid = low + (high - low) / 2;
        int merged[high - low + 1];

        mergeSort(a, low, mid);
        mergeSort(a, mid + 1, high);
        merge(a + low, mid - low + 1, a + mid + 1, high - mid, merged);

        for (int i = 0; i < high - low + 1; i++) {
            a[low + i] = merged[i];
        }
    }
}

int main() {
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    int a[n];

    printf("Enter the elements:\n");
    for (int t = 0; t < n; t++) {
        scanf("%d", &a[t]);
    }

    mergeSort(a, 0, n - 1);

    printf("Sorted list:\n");
    for (int t = 0; t < n; t++) {
        printf("%d\n", a[t]);
    }

    return 0;
}
